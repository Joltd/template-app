name: Build

concurrency: build

on:
  push:
    branches:
      - master

env:
  PROJECT_NAME: template-app
  PROJECT_VERSION: 1.0.${{ github.run_number }}

jobs:

  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - run: |
          npm install -g @angular/cli
          npm update

      - name: Build Server
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          build-root-directory: ./server

      - name: Build Web
        run: ng build --base-href /${{ env.PROJECT_NAME }}/

      - name: Build Docker images
        run: |
          docker build -t ${{ env.PROJECT_NAME }}-server:${{ env.PROJECT_VERSION }} ./server
          docker build -t ${{ env.PROJECT_NAME }}-web:${{ env.PROJECT_VERSION }} ./web

      - name: Push to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "{{ secrets.$DOCKER_USERNAME }}" --password-stdin
          docker push your-springboot-app-name
          docker push your-angular-app-name

      - name: Deploy
        run: |
          ssh -o "StrictHostKeyChecking=no" ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'bash -s' < deploy.sh